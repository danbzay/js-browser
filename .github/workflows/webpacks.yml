name: JavaScript in Browser Homeworks

on:
  push:
    branches: [ "main" ]  
    paths-ignore: [ "publish" ]

env:
  HOME_URL: 'https://danbzay.github.io/js-browser/'
      
jobs:
  configure:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v4

    - name: Set matrix data from pages.json
      id: set-matrix
      run: |
        echo "matrix=$(jq -c '[.[] | select(.build == true)]' < ./pages.json)"
        echo "fromJson($matrix)"
        echo "matrix=$(jq -c '[.[] | select(.build == true)]' < ./pages.json)" \          >> $GITHUB_OUTPUT

    - name: Create index.html
      run: | 
        mkdir -p publish;
        cat index | \
        sed -e '/\$/! s/^/echo \"/' -e '/\$/! s/$/\"/' -e '/\$/ s/\$//' | \
        bash > publish/index.html;
        cat publish/index.html;

    - name: Push results to publish
      continue-on-error: true
      run: |
        git config --global user.name 'danbzay'
        git config --global user.email 'danbzay@gmail.com'
        git remote set-url origin https://x-access-token:${{ secrets.PAT_11 }}@github.com/${{ github.repository }}
        git pull;
        git add ./publish;
        status=$(git status -uno --porcelain)
        if [ -z "$status" ]; then
          echo "status in empty"
        else
          git commit -m 'automatic saving page for future'
          git push
        fi
  
  build:
    runs-on: ubuntu-latest
    needs: configure
    if: ${{ fromJson(needs.configure.outputs.matrix).length != 0 }}
    permissions:
      contents: write
    strategy:
      max-parallel: 1
      matrix:
        page: ${{ fromJson(needs.configure.outputs.matrix) }}
        include: 
          - node-version: 22.x
 
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      if: ${{ matrix.page.build == true }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
   
    - name: Build with npm
      if: ${{ matrix.page.manager == 'npm'}} 
      working-directory: ${{ matrix.page.path }}        
      run: |
        npm install
        npx eslint
        npx webpack

    - name: Build with yarn
      if: ${{ matrix.page.manager == 'yarn' }}
      working-directory: ${{ matrix.page.path }}        
      run: |
        yarn install
        yarn eslint
        yarn webpack

    - name: Push results to publish
      run: |
        mkdir -p ./publish/${{ matrix.page.name }}
        cp -r ${{ matrix.page.path }}dist/* ./publish/${{ matrix.page.name }}/
        git config --global user.name 'danbzay'
        git config --global user.email 'danbzay@gmail.com'
        git remote set-url origin https://x-access-token:${{ secrets.PAT_11 }}@github.com/${{ github.repository }}
        git pull;
        git add ./publish/${{ matrix.page.name }};
        status=$(git status -uno --porcelain)
        if [ -z "$status" ]; then
          echo "status in empty"
        else
          git commit -m 'automatic saving page for future'
          git push
        fi
  
  combine:
    runs-on: ubuntu-latest
    needs: build
    if: always()
   
    steps:
    - uses: actions/checkout@v4

    - name: Update local files
      run: |
        git config --global user.name 'danbzay'
        git config --global user.email 'danbzay@gmail.com'
        git remote set-url origin https://x-access-token:${{ secrets.PAT_11 }}@github.com/${{ github.repository }}
        git pull;
 
    - name: Upload Combined Pages Artifact
      id: deployment
      uses: actions/upload-pages-artifact@v4
      with:
        path: ${{ github.workspace }}/publish      

  deploy:
    runs-on: ubuntu-latest
    needs: combine
    if: always()
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

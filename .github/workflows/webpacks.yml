name: JavaScript in Browser Homeworks

on:
  push:
    branches: [ "main" ]    

env:
  HOME_URL: 'https://danbzay.github.io/js-browser/'
      
jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set matrix data from pages.json
        id: set-matrix
        run: |
          echo "matrix=$(jq -c . < ./pages.json)" >> $GITHUB_OUTPUT

      - name: Create index.html
        run: | 
          mkdir -p home;
          cat index | \
          sed -e '/\$/! s/^/echo \"/' -e '/\$/! s/$/\"/' -e '/\$/ s/\$//' | \
          bash > home/index.html;
          cat home/index.html;

      - name: Upload index.html
        id: deployment
        uses: actions/upload-artifact@v4
        with:
          path: home
          name: home

  build:
    runs-on: ubuntu-latest
    needs: configure
    strategy:
      matrix:
        page: ${{ fromJson(needs.configure.outputs.matrix) }}
        include: 
          - node-version: 22.x
 
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0

    - name: Download published version of page
      if: ${{ matrix.page.republish == true }}
      continue-on-error: true
      run: |
        echo ${{ matrix.page.republish }}; 
        wget --recursive --no-parent --no-host-directories --cut-dirs=2 \
             --directory-prefix=${{ matrix.page.path }}dist \
             "$HOME_URL"${{ matrix.page.name }};
        ls -A

    - name: Use Node.js ${{ matrix.node-version }}
      if: ${{ matrix.page.republish == false }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
   
    - name: Build with npm
      if: ${{ matrix.page.manager == 'npm' && matrix.page.republish == false }} 
      run: |
        npm install
        npx eslint
        npx webpack

    - name: Build with yarn
      if: ${{ matrix.page.manager == 'yarn' && matrix.page.republish == false }}
      run: |
        cd ${{ matrix.page.path }}        
        yarn install
        yarn eslint
        yarn webpack


    - name: Upload Page Artifact
      uses: actions/upload-artifact@v4
      with:
        path: ${{ matrix.page.path }}dist 
        name: ${{ matrix.page.name }}

  combine:
    runs-on: ubuntu-latest
    needs: build
   
    steps:
    - name: Download and Combine Pages
      uses: actions/download-artifact@v5

    - name: Move index to root
      run: |
        ls -R;
        mv home/* .;

    - name: Upload Combined Pages Artifact
      id: deployment
      uses: actions/upload-pages-artifact@v4
      with:
        path: ${{ github.workspace }}      
          
  deploy:
    runs-on: ubuntu-latest
    needs: combine
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

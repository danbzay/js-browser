name: JavaScript in Browser Homeworks

on:
  push:
    branches: [ "main" ]  
    paths-ignore: [ "publish" ]

env:
  HOME_URL: 'https://danbzay.github.io/js-browser/'
      
jobs:
  configure:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set matrix data from pages.json
        id: set-matrix
        run: |
          echo "matrix=$(jq -c '.[] | select(.build == true) < ./pages.json)" \
          >> $GITHUB_OUTPUT

      - name: Create index.html
        run: | 
          mkdir -p publish;
          cat index | \
          sed -e '/\$/! s/^/echo \"/' -e '/\$/! s/$/\"/' -e '/\$/ s/\$//' | \
          bash > publish/index.html;
          cat publish/index.html;

      - name: Push results to publish
        run: |
          git config --global user.name 'danbzay'
          git config --global user.email 'danbzay@gmail.com'
          git remote set-url origin https://x-access-token:${{ secrets.PAT_11 }}    @github.com/${{ github.repository }}
          git pull;
          git add ./publish;
          git commit -m 'automatic saving page for future';
          git push;

  build:
    runs-on: ubuntu-latest
    needs: configure
    permissions:
      contents: write
    strategy:
      matrix:
        page: ${{ fromJson(needs.configure.outputs.matrix) }}
        include: 
          - node-version: 22.x
 
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0
    
    - name: Use Node.js ${{ matrix.node-version }}
      if: ${{ matrix.page.build == true }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
   
    - name: Build with npm
      if: ${{ matrix.page.manager == 'npm' && matrix.page.build == true }} 
      run: |
        cd ${{ matrix.page.path }}        
        npm install
        npx eslint
        npx webpack
        cp -r dist/* $GITHUB_WORKSPACE/publish/${{ matrix.page.name }}/

    - name: Build with yarn
      if: ${{ matrix.page.manager == 'yarn' && matrix.page.build == true }}
      run: |
        cd ${{ matrix.page.path }}        
        yarn install
        yarn eslint
        yarn webpack
        cp -r dist/* $GITHUB_WORKSPACE/publish/${{ matrix.page.name }}/

    - name: Push results to publish
      run: |
        git config --global user.name 'danbzay'
        git config --global user.email 'danbzay@gmail.com'
        git remote set-url origin https://x-access-token:${{ secrets.PAT_11 }}    @github.com/${{ github.repository }}
        git pull;
        git add ./publish;
        git commit -m 'automatic saving page for future';
        git push;
  
  combine:
    runs-on: ubuntu-latest
    needs: build
   
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0

    - name: Upload Combined Pages Artifact
      id: deployment
      uses: actions/upload-pages-artifact@v4
      with:
        path: ${{ github.workspace }}/publish      

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
